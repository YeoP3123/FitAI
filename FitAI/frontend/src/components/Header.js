import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import LoginModal from "./LoginModal";
import SignupModal from "./SignupModal";
import { Link } from "react-router-dom";
const Header = () => {
    const [modal, setModal] = useState(null);
    return (_jsxs(_Fragment, { children: [_jsxs("header", { className: "bg-[#1E1F23] h-18 flex items-center justify-between px-8", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: "w-10 h-10 bg-gradient-to-r from-orange-500 to-red-500 rounded-xl flex items-center justify-center", children: _jsx("svg", { className: "w-6 h-6 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "M13 10V3L4 14h7v7l9-11h-7z" }) }) }), _jsx("span", { className: "text-xl font-bold text-white", children: "FitAI" })] }), _jsxs("nav", { className: "hidden md:flex items-center space-x-10 text-sm font-medium", children: [_jsx("a", { href: "#", className: "text-white hover:text-orange-500 transition", children: "\uC6B4\uB3D9" }), _jsx("a", { href: "#", className: "text-white hover:text-orange-500 transition", children: "\uC790\uC138\uAD50\uC815" }), _jsx(Link, { to: "/community", className: "text-white hover:text-orange-500 transition", children: "\uCEE4\uBBA4\uB2C8\uD2F0" }), _jsx("a", { href: "#", className: "text-white hover:text-orange-500 transition", children: "\uB0B4 \uAE30\uB85D" })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("button", { onClick: () => setModal("login"), className: "text-white text-sm hover:text-orange-500 transition", children: "\uB85C\uADF8\uC778" }), _jsx("button", { className: "bg-orange-500 hover:bg-orange-600 text-white text-sm font-medium px-4 py-2 rounded-full transition", children: "\uC2DC\uC791\uD558\uAE30" })] })] }), modal === "login" && (_jsx(LoginModal, { onClose: () => setModal(null), onSwitchToSignup: () => setModal("signup") })), modal === "signup" && (_jsx(SignupModal, { onClose: () => setModal(null), onSwitchToLogin: () => setModal("login") }))] }));
};
export default Header;
